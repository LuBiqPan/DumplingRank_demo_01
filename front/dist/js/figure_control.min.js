var growthChart=echarts.init(document.getElementById("inner-group")),percentageChart=echarts.init(document.getElementById("inner-percentage"));option=null;var sampleTime,growthTotal,growthTheater,growthTeam,growthMember,valSNH48,valBEJ48,valGNZ48,valSII,valNII,valHII,valX,valB,valE,valJ,valG,valNIII,valZ,base=+new Date(2014,9,3),date=[0],data=[1],growthDataTotal=[0],growthDataSNH48=[0],growthDataBEJ48=[0],growthDataGNZ48=[0],now=new Date(base);function addData(t,a,e,o){"string"==typeof a?(date.push(a.substring(5,16)),growthDataTotal.push(e),growthDataSNH48.push(o[0].amount_theater),growthDataBEJ48.push(o[1].amount_theater),growthDataGNZ48.push(o[2].amount_theater),t&&(date.shift(),growthDataTotal.shift(),growthDataSNH48.shift(),growthDataBEJ48.shift(),growthDataGNZ48.shift())):(date.push(0),growthDataTotal.push(0),growthDataSNH48.push(0),growthDataBEJ48.push(0),growthDataGNZ48.push(0))}percentageChart.showLoading({text:"正在加载，请稍后...",color:"#C0DAFF",textColor:"#C0DAFF",maskColor:"rgba(255, 255, 255, 0.0)",zlevel:0}),$(document).ready(function(){$(window).width()<=600?(console.log("Mobile"),$(".left-wrapper").hide(),$(".right-wrapper").hide()):($(".left-wrapper").show(),$(".right-wrapper").show())});for(var i=1;i<10;i++)addData();var option={tooltip:{trigger:"axis",showContent:!0,formatter:function(t){return t[0].seriesName+": "+parseFloat(t[0].value).toFixed(2)+"<br>"+t[1].seriesName+": "+parseFloat(t[1].value).toFixed(2)+"<br>"+t[2].seriesName+": "+parseFloat(t[2].value).toFixed(2)+"<br>"+t[3].seriesName+": "+parseFloat(t[3].value).toFixed(2)},axisPointer:{type:"cross",snap:!0,lineStyle:{type:"dashed"}},backgroundColor:"rgba(192, 218, 255, 0.5)",textStyle:{color:"#000"},extraCssText:"width: 170px"},title:{text:"集资增长",textStyle:{color:"#C0DAFF"}},legend:{type:"plain",x:"left",left:80,top:40,inactiveColor:"#121A20",textStyle:{color:"#aaaaaa",fontSize:9},selectedMode:!1},xAxis:{type:"category",boundaryGap:!1,data:date,axisLine:{lineStyle:{color:"#C0DAFF"}}},yAxis:{name:"单位：万元",nameGap:10,type:"value",boundaryGap:!1,splitLine:{show:!1},axisLine:{lineStyle:{color:"#C0DAFF"}},axisLabel:{formatter:function(t,a){return t/1e4}}},grid:{x:40,y:50,x2:10,y2:30},series:[{name:"集资总额",type:"line",smooth:!1,symbol:"circle",areaStyle:{normal:{}},data:growthDataTotal,lineStyle:{width:3},itemStyle:{normal:{color:"#00b6de",borderColor:"#00b6de",areaStyle:{type:"default",opacity:0}}}},{name:"SNH48",type:"line",smooth:!1,symbol:"circle",areaStyle:{normal:{}},data:growthDataSNH48,itemStyle:{normal:{color:"#00b6de",borderColor:"#00b6de",areaStyle:{type:"default",opacity:.3}}}},{name:"BEJ48",type:"line",smooth:!1,symbol:"circle",areaStyle:{normal:{}},data:growthDataBEJ48,itemStyle:{normal:{color:"#ff4083",borderColor:"#ff4083",areaStyle:{type:"default",opacity:.3}}}},{name:"GNZ48",type:"line",smooth:!1,symbol:"circle",areaStyle:{normal:{}},data:growthDataBEJ48,itemStyle:{normal:{color:"#9FBF40",borderColor:"#9FBF40",areaStyle:{type:"default",opacity:.3}}}}]};function amountPercentage(t,a,e,o,r,l,n,i,m,h,s,g,p){var d={title:{text:"集资比例",textStyle:{color:"#C0DAFF"}},tooltip:{trigger:"item",formatter:function(t){return t.name+": "+parseFloat(t.value).toFixed(2)+" ("+t.percent.toFixed(1)+"%)"}},series:[{type:"pie",selectedMode:"single",radius:[0,"45%"],label:{normal:{position:"inner"}},labelLine:{normal:{show:!1}},data:[{value:t,name:"SNH48",itemStyle:{color:"#00b6de"}},{value:a,name:"BEJ48",itemStyle:{color:"#ff4083"}},{value:e,name:"GNZ48",itemStyle:{color:"#9FBF40"}}]},{type:"pie",radius:["54%","75%"],label:{normal:{borderRadius:4,rich:{a:{color:"#999",lineHeight:22,align:"center"},hr:{borderColor:"#aaa",width:"100%",borderWidth:.5,height:0},b:{fontSize:16,lineHeight:33},per:{color:"#eee",backgroundColor:"#334455",padding:[2,4],borderRadius:2}}}},data:[{value:o,name:"SII",itemStyle:{color:"#00b6de"}},{value:r,name:"NII",itemStyle:{color:"#9e57b4"}},{value:l,name:"HII",itemStyle:{color:"#f8941d"}},{value:n,name:"X",itemStyle:{color:"#b1d61b"}},{value:i,name:"B",itemStyle:{color:"#ff4083"}},{value:m,name:"E",itemStyle:{color:"#0cc8c3"}},{value:h,name:"J",itemStyle:{color:"#006ab7"}},{value:s,name:"G",itemStyle:{color:"#9FBF40"}},{value:g,name:"NIII",itemStyle:{color:"#ffe249"}},{value:p,name:"Z",itemStyle:{color:"#ea617b"}}]}]};percentageChart.hideLoading(),percentageChart.setOption(d,!0)}option&&"object"==typeof option&&growthChart.setOption(option,!0);var ajaxTime=2e3;setInterval(function(){$.ajax({url:"",contentType:"application/json",dataType:"json",type:"GET",success:function(t){for(var a in i=0,t){var e=t[a],o=$.parseJSON(e);for(var a in i++,o){var r="#tr-rank-"+i.toString()+" .rank-member",l="#tr-rank-"+i.toString()+" .rank-account",n="#tr-rank-"+i.toString()+" .rank-vote";$(r).text(o.member),$(l).text(o.real_amount),$(n).text(o.vote),$("#amount-total").text(o.amount_total)}}sampleTime=$.parseJSON(t.growth_total).sample_time,growthTotal=$.parseJSON(t.growth_total).amount_total,growthTheater=$.parseJSON(t.growth_theater),growthTeam=$.parseJSON(t.growth_team),valSNH48=growthTheater[0].amount_theater,valBEJ48=growthTheater[1].amount_theater,valGNZ48=growthTheater[2].amount_theater,valSII=growthTeam[0].amount_team,valNII=growthTeam[1].amount_team,valHII=growthTeam[2].amount_team,valX=growthTeam[3].amount_team,valB=growthTeam[4].amount_team,valE=growthTeam[5].amount_team,valJ=growthTeam[6].amount_team,valG=growthTeam[7].amount_team,valNIII=growthTeam[8].amount_team,valZ=growthTeam[9].amount_team}}),addData(!0,sampleTime,growthTotal,growthTheater),growthChart.setOption({xAxis:{data:date},series:[{name:"集资总额",data:growthDataTotal},{name:"SNH48",data:growthDataSNH48},{name:"BEJ48",data:growthDataBEJ48},{name:"GNZ48",data:growthDataGNZ48}]}),amountPercentage(valSNH48,valBEJ48,valGNZ48,valSII,valNII,valHII,valX,valB,valE,valJ,valG,valNIII,valZ)},ajaxTime);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpZ3VyZV9jb250cm9sLmpzIl0sIm5hbWVzIjpbImdyb3d0aENoYXJ0IiwiZWNoYXJ0cyIsImluaXQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwicGVyY2VudGFnZUNoYXJ0Iiwib3B0aW9uIiwic2FtcGxlVGltZSIsImdyb3d0aFRvdGFsIiwiZ3Jvd3RoVGhlYXRlciIsImdyb3d0aFRlYW0iLCJncm93dGhNZW1iZXIiLCJ2YWxTTkg0OCIsInZhbEJFSjQ4IiwidmFsR05aNDgiLCJ2YWxTSUkiLCJ2YWxOSUkiLCJ2YWxISUkiLCJ2YWxYIiwidmFsQiIsInZhbEUiLCJ2YWxKIiwidmFsRyIsInZhbE5JSUkiLCJ2YWxaIiwiYmFzZSIsIkRhdGUiLCJkYXRlIiwiZGF0YSIsImdyb3d0aERhdGFUb3RhbCIsImdyb3d0aERhdGFTTkg0OCIsImdyb3d0aERhdGFCRUo0OCIsImdyb3d0aERhdGFHTlo0OCIsIm5vdyIsImFkZERhdGEiLCJzaGlmdCIsInB1c2giLCJzdWJzdHJpbmciLCJzaG93TG9hZGluZyIsInRleHQiLCJjb2xvciIsInRleHRDb2xvciIsIm1hc2tDb2xvciIsInpsZXZlbCIsIiQiLCJyZWFkeSIsIndpbmRvdyIsIndpZHRoIiwiY29uc29sZSIsImxvZyIsImhpZGUiLCJzaG93IiwiaSIsInRvb2x0aXAiLCJ0cmlnZ2VyIiwic2hvd0NvbnRlbnQiLCJmb3JtYXR0ZXIiLCJwYXJhbXMiLCJwYXJzZUZsb2F0IiwidmFsdWUiLCJ0b0ZpeGVkIiwiYXhpc1BvaW50ZXIiLCJ0eXBlIiwic25hcCIsImxpbmVTdHlsZSIsImJhY2tncm91bmRDb2xvciIsInRleHRTdHlsZSIsImV4dHJhQ3NzVGV4dCIsInRpdGxlIiwibGVnZW5kIiwieCIsImxlZnQiLCJ0b3AiLCJpbmFjdGl2ZUNvbG9yIiwiZm9udFNpemUiLCJzZWxlY3RlZE1vZGUiLCJ4QXhpcyIsImJvdW5kYXJ5R2FwIiwiYXhpc0xpbmUiLCJ5QXhpcyIsIm5hbWUiLCJuYW1lR2FwIiwic3BsaXRMaW5lIiwiYXhpc0xhYmVsIiwiaW5kZXgiLCJncmlkIiwieSIsIngyIiwieTIiLCJzZXJpZXMiLCJzbW9vdGgiLCJzeW1ib2wiLCJhcmVhU3R5bGUiLCJub3JtYWwiLCJpdGVtU3R5bGUiLCJib3JkZXJDb2xvciIsIm9wYWNpdHkiLCJhbW91bnRQZXJjZW50YWdlIiwicmFkaXVzIiwibGFiZWwiLCJwb3NpdGlvbiIsImxhYmVsTGluZSIsImJvcmRlclJhZGl1cyIsInJpY2giLCJhIiwibGluZUhlaWdodCIsImFsaWduIiwiaHIiLCJib3JkZXJXaWR0aCIsImhlaWdodCIsImIiLCJwZXIiLCJwYWRkaW5nIiwiaGlkZUxvYWRpbmciLCJzZXRPcHRpb24iLCJhamF4VGltZSIsInNldEludGVydmFsIiwiYWpheCIsInVybCIsImNvbnRlbnRUeXBlIiwiZGF0YVR5cGUiLCJzdWNjZXNzIiwidmFsIiwicmFua0luZm8iLCJyYW5rSW5mb0pzb24iLCJwYXJzZUpTT04iLCJtZW1iZXJTZWxlY3RvciIsInRvU3RyaW5nIiwidG90YWxBbW91bnRTZWxlY3RvciIsInZvdGVTZWxlY3RvciJdLCJtYXBwaW5ncyI6IkFBTUEsSUFBSUEsWUFBY0MsUUFBUUMsS0FBS0MsU0FBU0MsZUFBZSxnQkFDbkRDLGdCQUFrQkosUUFBUUMsS0FBS0MsU0FBU0MsZUFBZSxxQkFHM0RFLE9BQVMsS0FDVCxJQU1JQyxXQVFBQyxZQUFhQyxjQUFlQyxXQUFZQyxhQUV4Q0MsU0FBVUMsU0FBVUMsU0FDcEJDLE9BQVFDLE9BQVFDLE9BQVFDLEtBQU1DLEtBQU1DLEtBQU1DLEtBQU1DLEtBQU1DLFFBQVNDLEtBakIvREMsTUFBUSxJQUFJQyxLQUFLLEtBQU0sRUFBRyxHQUUxQkMsS0FBTyxDQUFDLEdBRVJDLEtBQU8sQ0FBQyxHQUdSQyxnQkFBa0IsQ0FBQyxHQUNuQkMsZ0JBQWtCLENBQUMsR0FDbkJDLGdCQUFrQixDQUFDLEdBQ25CQyxnQkFBa0IsQ0FBQyxHQUNuQkMsSUFBTSxJQUFJUCxLQUFLRCxNQXFDbkIsU0FBU1MsUUFBUUMs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YyxHQUFtQixlQUU1Q00sT0FBVUwsV0FBVyxHQUFnQixZQUNyQ00sT0FBVU4sV0FBVyxHQUFnQixZQUNyQ08sT0FBVVAsV0FBVyxHQUFnQixZQUNyQ1EsS0FBVVIsV0FBVyxHQUFnQixZQUNyQ1MsS0FBVVQsV0FBVyxHQUFnQixZQUNyQ1UsS0FBVVYsV0FBVyxHQUFnQixZQUNyQ1csS0FBVVgsV0FBVyxHQUFnQixZQUNyQ1ksS0FBVVosV0FBVyxHQUFnQixZQUNyQ2EsUUFBVWIsV0FBVyxHQUFnQixZQUNyQ2MsS0FBVWQsV0FBVyxHQUFnQixlQVc3Q3dCLFNBQVEsRUFBTTNCLFdBQVlDLFlBQWFDLGVBQ3ZDVCxZQUFZa0gsVUFBVSxDQUNsQnRDLE1BQU8sQ0FDSGhELEtBQU1ELE1BRVY4RCxPQUFRLENBQ0osQ0FBQ1QsS0FBSyxPQUFRcEQsS0FBTUMsaUJBQ3BCLENBQUNtRCxLQUFLLFFBQVNwRCxLQUFNRSxpQkFDckIsQ0FBQ2tELEtBQUssUUFBU3BELEtBQU1HLGlCQUNyQixDQUFDaUQsS0FBSyxRQUFTcEQsS0FBTUksb0JBSzdCaUUsaUJBQ0lyRixTQUFVQyxTQUFVQyxTQUNwQkMsT0FBUUMsT0FBUUMsT0FBUUMsS0FBTUMsS0FBTUMsS0FBTUMsS0FBTUMsS0FBTUMsUUFBU0MsT0FLcEUyRiIsImZpbGUiOiJmaWd1cmVfY29udHJvbC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLy8gdmFyIHBrTWVtYmVyID0gW107XHJcbi8vIHZhciBwa0Ftb3VudCA9IFtdO1xyXG4vLyB2YXIgcGtBbW91bnRSYXRpbztcclxuLy8gdmFyIHBrVGl0bGU7XHJcblxyXG52YXIgZ3Jvd3RoQ2hhcnQgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbm5lci1ncm91cFwiKSk7XHJcbnZhciBwZXJjZW50YWdlQ2hhcnQgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbm5lci1wZXJjZW50YWdlXCIpKTtcclxuLy8gdmFyIHBrQ2hhcnQgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwa1wiKSk7XHJcblxyXG5vcHRpb24gPSBudWxsO1xyXG52YXIgYmFzZSA9ICtuZXcgRGF0ZSgyMDE0LCA5LCAzKTtcclxuXHJcbnZhciBkYXRlID0gWzBdO1xyXG5cclxudmFyIGRhdGEgPSBbMV07XHJcblxyXG52YXIgc2FtcGxlVGltZTtcclxudmFyIGdyb3d0aERhdGFUb3RhbCA9IFswXTtcclxudmFyIGdyb3d0aERhdGFTTkg0OCA9IFswXTtcclxudmFyIGdyb3d0aERhdGFCRUo0OCA9IFswXTtcclxudmFyIGdyb3d0aERhdGFHTlo0OCA9IFswXTtcclxudmFyIG5vdyA9IG5ldyBEYXRlKGJhc2UpO1xyXG5cclxuXHJcbnZhciBncm93dGhUb3RhbCwgZ3Jvd3RoVGhlYXRlciwgZ3Jvd3RoVGVhbSwgZ3Jvd3RoTWVtYmVyO1xyXG5cclxudmFyIHZhbFNOSDQ4LCB2YWxCRUo0OCwgdmFsR05aNDg7XHJcbnZhciB2YWxTSUksIHZhbE5JSSwgdmFsSElJLCB2YWxYLCB2YWxCLCB2YWxFLCB2YWxKLCB2YWxHLCB2YWxOSUlJLCB2YWxaO1xyXG5cclxuXHJcbnBlcmNlbnRhZ2VDaGFydC5zaG93TG9hZGluZyh7XHJcbiAgdGV4dDogJ+ato+WcqOWKoOi9ve+8jOivt+eojeWQji4uLicsXHJcbiAgY29sb3I6ICcjQzBEQUZGJyxcclxuICB0ZXh0Q29sb3I6ICcjQzBEQUZGJyxcclxuICBtYXNrQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMCknLFxyXG4gIHpsZXZlbDogMFxyXG59KTtcclxuLy8gcGtDaGFydC5zaG93TG9hZGluZyh7XHJcbi8vICAgdGV4dDogJ+ato+WcqOWKoOi9ve+8jOivt+eojeWQji4uLicsXHJcbi8vICAgY29sb3I6ICcjQzBEQUZGJyxcclxuLy8gICB0ZXh0Q29sb3I6ICcjQzBEQUZGJyxcclxuLy8gICBtYXNrQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMCknLFxyXG4vLyAgIHpsZXZlbDogMFxyXG4vLyB9KTtcclxuXHJcbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzY3JlZW5XaWR0aCA9ICQod2luZG93KS53aWR0aCgpO1xyXG4gICAgaWYgKHNjcmVlbldpZHRoIDw9IDYwMCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiTW9iaWxlXCIpO1xyXG4gICAgICAgICQoXCIubGVmdC13cmFwcGVyXCIpLmhpZGUoKTtcclxuICAgICAgICAkKFwiLnJpZ2h0LXdyYXBwZXJcIikuaGlkZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAkKFwiLmxlZnQtd3JhcHBlclwiKS5zaG93KCk7XHJcbiAgICAgICAgJChcIi5yaWdodC13cmFwcGVyXCIpLnNob3coKTtcclxuICAgIH1cclxufSk7XHJcblxyXG5cclxuZnVuY3Rpb24gYWRkRGF0YShzaGlmdCwgc2FtcGxlVGltZSwgZ3Jvd3RoVG90YWwsIGdyb3d0aFRoZWF0ZXIpIHtcclxuICAgIGlmICh0eXBlb2Ygc2FtcGxlVGltZSA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAvLyBzYW1wbGUgdGltZVxyXG4gICAgICAgIGRhdGUucHVzaChzYW1wbGVUaW1lLnN1YnN0cmluZyg1LCAxNikpOyAvLyBUaW1lIGZvcm1hdDogXCJtb250aC1kYXkgaGg6bW1cIlxyXG4gICAgICAgIC8vIHRvdGFsXHJcbiAgICAgICAgZ3Jvd3RoRGF0YVRvdGFsLnB1c2goZ3Jvd3RoVG90YWwpO1xyXG4gICAgICAgIC8vIHRoZWF0ZXJcclxuICAgICAgICBncm93dGhEYXRhU05INDgucHVzaChncm93dGhUaGVhdGVyWzBdW1wiYW1vdW50X3RoZWF0ZXJcIl0pO1xyXG4gICAgICAgIGdyb3d0aERhdGFCRUo0OC5wdXNoKGdyb3d0aFRoZWF0ZXJbMV1bXCJhbW91bnRfdGhlYXRlclwiXSk7XHJcbiAgICAgICAgLy8gZ3Jvd3RoRGF0YUdOWjQ4LnB1c2goZ3Jvd3RoVGhlYXRlclsyXVtcImFtb3VudF90aGVhdGVyXCJdICogTWF0aC5yYW5kb20oKSk7XHJcbiAgICAgICAgZ3Jvd3RoRGF0YUdOWjQ4LnB1c2goZ3Jvd3RoVGhlYXRlclsyXVtcImFtb3VudF90aGVhdGVyXCJdKTtcclxuXHJcbiAgICAgICAgaWYgKHNoaWZ0KSB7XHJcbiAgICAgICAgICAgIGRhdGUuc2hpZnQoKTtcclxuXHJcbiAgICAgICAgICAgIGdyb3d0aERhdGFUb3RhbC5zaGlmdCgpO1xyXG4gICAgICAgICAgICBncm93dGhEYXRhU05INDguc2hpZnQoKTtcclxuICAgICAgICAgICAgZ3Jvd3RoRGF0YUJFSjQ4LnNoaWZ0KCk7XHJcbiAgICAgICAgICAgIGdyb3d0aERhdGFHTlo0OC5zaGlmdCgpO1xyXG4gICAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZGF0ZS5wdXNoKDApO1xyXG5cclxuICAgICAgICBncm93dGhEYXRhVG90YWwucHVzaCgwKTtcclxuICAgICAgICBncm93dGhEYXRhU05INDgucHVzaCgwKTtcclxuICAgICAgICBncm93dGhEYXRhQkVKNDgucHVzaCgwKTtcclxuICAgICAgICBncm93dGhEYXRhR05aNDgucHVzaCgwKTtcclxuICAgIH1cclxufVxyXG5cclxuZm9yICh2YXIgaSA9IDE7IGkgPCAxMDsgaSsrKSB7XHJcbiAgICBhZGREYXRhKCk7XHJcbn1cclxuXHJcbnZhciBvcHRpb24gPSB7XHJcbiAgICB0b29sdGlwOiB7XHJcbiAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLFxyXG4gICAgICAgIHNob3dDb250ZW50OiB0cnVlLCAgICAgLy8gRG8gbm90IHNob3cgY29udGVudC5cclxuICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIChwYXJhbXMpIHsgLy8gdG9GaXhlZCgpOiBzaG93IHR3byBkZWNpbWFsc1xyXG4gICAgICAgICAgICByZXR1cm4gcGFyYW1zWzBdW1wic2VyaWVzTmFtZVwiXSArIFwiOiBcIiArIHBhcnNlRmxvYXQocGFyYW1zWzBdLnZhbHVlKS50b0ZpeGVkKDIpICsgJzxicj4nXHJcbiAgICAgICAgICAgICAgICAgKyBwYXJhbXNbMV1bXCJzZXJpZXNOYW1lXCJdICsgXCI6IFwiICsgcGFyc2VGbG9hdChwYXJhbXNbMV0udmFsdWUpLnRvRml4ZWQoMikgKyAnPGJyPidcclxuICAgICAgICAgICAgICAgICArIHBhcmFtc1syXVtcInNlcmllc05hbWVcIl0gKyBcIjogXCIgKyBwYXJzZUZsb2F0KHBhcmFtc1syXS52YWx1ZSkudG9GaXhlZCgyKSArICc8YnI+J1xyXG4gICAgICAgICAgICAgICAgICsgcGFyYW1zWzNdW1wic2VyaWVzTmFtZVwiXSArIFwiOiBcIiArIHBhcnNlRmxvYXQocGFyYW1zWzNdLnZhbHVlKS50b0ZpeGVkKDIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYXhpc1BvaW50ZXI6IHtcclxuICAgICAgICAgICAgdHlwZTogJ2Nyb3NzJyxcclxuICAgICAgICAgICAgc25hcDogdHJ1ZSxcclxuICAgICAgICAgICAgbGluZVN0eWxlOiB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiAnZGFzaGVkJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDE5MiwgMjE4LCAyNTUsIDAuNSknLFxyXG4gICAgICAgIHRleHRTdHlsZToge1xyXG4gICAgICAgICAgICBjb2xvcjogJyMwMDAnXHJcbiAgICAgICAgfSxcclxuICAgICAgICBleHRyYUNzc1RleHQ6ICd3aWR0aDogMTcwcHgnXHJcbiAgICB9LFxyXG5cclxuICAgIHRpdGxlOntcclxuICAgICAgICB0ZXh0OiAn6ZuG6LWE5aKe6ZW/JyxcclxuICAgICAgICB0ZXh0U3R5bGU6IHtcclxuICAgICAgICAgICAgY29sb3I6ICcjQzBEQUZGJyxcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuXHJcbiAgICBsZWdlbmQ6e1xyXG4gICAgICAgIHR5cGU6ICdwbGFpbicsXHJcbiAgICAgICAgeDogJ2xlZnQnLFxyXG4gICAgICAgIGxlZnQ6IDgwLFxyXG4gICAgICAgIHRvcDogNDAsXHJcbiAgICAgICAgaW5hY3RpdmVDb2xvcjogJyMxMjFBMjAnLFxyXG4gICAgICAgIHRleHRTdHlsZTp7XHJcbiAgICAgICAgICAgIGNvbG9yOiAnI2FhYWFhYScsXHJcbiAgICAgICAgICAgIGZvbnRTaXplOiA5LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2VsZWN0ZWRNb2RlOiBmYWxzZVxyXG4gICAgfSxcclxuXHJcbiAgICB4QXhpczoge1xyXG4gICAgICAgIHR5cGU6ICdjYXRlZ29yeScsXHJcbiAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlLFxyXG4gICAgICAgIGRhdGE6IGRhdGUsXHJcbiAgICAgICAgYXhpc0xpbmU6IHtcclxuICAgICAgICAgICAgbGluZVN0eWxlOiB7XHJcbiAgICAgICAgICAgICAgICAvLyBYIGF4aXMgY29sb3JcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAnI0MwREFGRidcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG5cclxuICAgIHlBeGlzOiB7XHJcbiAgICAgICAgbmFtZTogJ+WNleS9je+8muS4h+WFgycsXHJcbiAgICAgICAgbmFtZUdhcDogMTAsXHJcbiAgICAgICAgdHlwZTogJ3ZhbHVlJyxcclxuICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsXHJcbiAgICAgICAgc3BsaXRMaW5lOntcclxuICAgICAgICAgICAgc2hvdzogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIGF4aXNMaW5lOiB7XHJcbiAgICAgICAgICAgIGxpbmVTdHlsZToge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICcjQzBEQUZGJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBheGlzTGFiZWw6IHtcclxuICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAodmFsdWUsIGluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUgLyAxMDAwMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgZ3JpZDoge1xyXG4gICAgICAgIC8vIHgsIHksIHgyLCB5MjogYXhpcyBkaXN0YW5jZSBmcm9tIGRpdlxyXG4gICAgICAgIHg6IDQwLFxyXG4gICAgICAgIHk6IDUwLFxyXG4gICAgICAgIHgyOiAxMCxcclxuICAgICAgICB5MjogMzAsXHJcbiAgICB9LFxyXG5cclxuICAgIHNlcmllczogW1xyXG4gICAgICAgIC8vIFRvdGFsXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOifpm4botYTmgLvpop0nLFxyXG4gICAgICAgICAgICB0eXBlOidsaW5lJyxcclxuICAgICAgICAgICAgc21vb3RoOmZhbHNlLFxyXG4gICAgICAgICAgICBzeW1ib2w6ICdjaXJjbGUnLFxyXG4gICAgICAgICAgICBhcmVhU3R5bGU6IHtcclxuICAgICAgICAgICAgICAgIG5vcm1hbDoge31cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGF0YTogZ3Jvd3RoRGF0YVRvdGFsLFxyXG4gICAgICAgICAgICBsaW5lU3R5bGU6IHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAzXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGl0ZW1TdHlsZToge1xyXG4gICAgICAgICAgICAgICAgbm9ybWFsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMDBiNmRlJyxcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyMwMGI2ZGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIGFyZWFTdHlsZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZGVmYXVsdCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuMCAgICAvL0NvbG9yIHVuZGVyIGxpbmVzLlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIFNOSDQ4XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOidTTkg0OCcsXHJcbiAgICAgICAgICAgIHR5cGU6J2xpbmUnLFxyXG4gICAgICAgICAgICBzbW9vdGg6ZmFsc2UsXHJcbiAgICAgICAgICAgIHN5bWJvbDogJ2NpcmNsZScsXHJcbiAgICAgICAgICAgIGFyZWFTdHlsZToge1xyXG4gICAgICAgICAgICAgICAgbm9ybWFsOiB7fVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBkYXRhOiBncm93dGhEYXRhU05INDgsXHJcbiAgICAgICAgICAgIGl0ZW1TdHlsZToge1xyXG4gICAgICAgICAgICAgICAgbm9ybWFsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMDBiNmRlJyxcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyMwMGI2ZGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIGFyZWFTdHlsZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZGVmYXVsdCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuMyAgICAvL0NvbG9yIHVuZGVyIGxpbmVzLlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIEJFSjQ4XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOidCRUo0OCcsXHJcbiAgICAgICAgICAgIHR5cGU6J2xpbmUnLFxyXG4gICAgICAgICAgICBzbW9vdGg6ZmFsc2UsXHJcbiAgICAgICAgICAgIHN5bWJvbDogJ2NpcmNsZScsXHJcbiAgICAgICAgICAgIGFyZWFTdHlsZToge1xyXG4gICAgICAgICAgICAgICAgbm9ybWFsOiB7fVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBkYXRhOiBncm93dGhEYXRhQkVKNDgsXHJcbiAgICAgICAgICAgIGl0ZW1TdHlsZToge1xyXG4gICAgICAgICAgICAgICAgbm9ybWFsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjZmY0MDgzJyxcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyNmZjQwODMnLFxyXG4gICAgICAgICAgICAgICAgICAgIGFyZWFTdHlsZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZGVmYXVsdCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuMyAgICAvL0NvbG9yIHVuZGVyIGxpbmVzLlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIEdOWjQ4XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOidHTlo0OCcsXHJcbiAgICAgICAgICAgIHR5cGU6J2xpbmUnLFxyXG4gICAgICAgICAgICBzbW9vdGg6ZmFsc2UsXHJcbiAgICAgICAgICAgIHN5bWJvbDogJ2NpcmNsZScsXHJcbiAgICAgICAgICAgIGFyZWFTdHlsZToge1xyXG4gICAgICAgICAgICAgICAgbm9ybWFsOiB7fVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBkYXRhOiBncm93dGhEYXRhQkVKNDgsXHJcbiAgICAgICAgICAgIGl0ZW1TdHlsZToge1xyXG4gICAgICAgICAgICAgICAgbm9ybWFsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjOUZCRjQwJyxcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyM5RkJGNDAnLFxyXG4gICAgICAgICAgICAgICAgICAgIGFyZWFTdHlsZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZGVmYXVsdCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuMyAgICAvL0NvbG9yIHVuZGVyIGxpbmVzLlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgXVxyXG59O1xyXG5cclxuaWYgKG9wdGlvbiAmJiB0eXBlb2Ygb3B0aW9uID09PSBcIm9iamVjdFwiKSB7XHJcbiAgICBncm93dGhDaGFydC5zZXRPcHRpb24ob3B0aW9uLCB0cnVlKTtcclxufVxyXG5cclxuXHJcbi8vIFRvdGFsIHBlcmNlbnRhZ2UgKHRoZWF0ZXIpXHJcbmZ1bmN0aW9uIGFtb3VudFBlcmNlbnRhZ2UoXHJcbiAgICB2YWxTTkg0OCwgdmFsQkVKNDgsIHZhbEdOWjQ4LFxyXG4gICAgdmFsU0lJLCB2YWxOSUksIHZhbEhJSSwgdmFsWCwgdmFsQiwgdmFsRSwgdmFsSiwgdmFsRywgdmFsTklJSSwgdmFsWlxyXG4pIHtcclxuICAgIHZhciBvcHRpb24gPSB7XHJcbiAgICAgICAgdGl0bGU6e1xyXG4gICAgICAgICAgICB0ZXh0OiAn6ZuG6LWE5q+U5L6LJyxcclxuICAgICAgICAgICAgdGV4dFN0eWxlOiB7Y29sb3I6ICcjQzBEQUZGJ30sXHJcbiAgICAgICAgfSxcclxuICAgICAgICB0b29sdGlwOiB7XHJcbiAgICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJyxcclxuICAgICAgICAgICAgLy8gZm9ybWF0dGVyOiBcIntifToge2N9ICh7ZH0lKVwiXHJcbiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gKHBhcmFtcykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcmFtc1tcIm5hbWVcIl0gKyBcIjogXCIgKyBwYXJzZUZsb2F0KHBhcmFtc1tcInZhbHVlXCJdKS50b0ZpeGVkKDIpICsgXCIgKFwiICsgcGFyYW1zW1wicGVyY2VudFwiXS50b0ZpeGVkKDEpICsgXCIlKVwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZXJpZXM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgLy8gbmFtZTon6K6/6Zeu5p2l5rqQJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6J3BpZScsXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RlZE1vZGU6ICdzaW5nbGUnLFxyXG4gICAgICAgICAgICAgICAgcmFkaXVzOiBbMCwgJzQ1JSddLFxyXG5cclxuICAgICAgICAgICAgICAgIGxhYmVsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbm9ybWFsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnaW5uZXInXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGxhYmVsTGluZToge1xyXG4gICAgICAgICAgICAgICAgICAgIG5vcm1hbDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzaG93OiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBkYXRhOltcclxuICAgICAgICAgICAgICAgICAgICB7dmFsdWU6dmFsU05INDgsIG5hbWU6J1NOSDQ4JywgaXRlbVN0eWxlOntjb2xvcjonIzAwYjZkZSd9fSxcclxuICAgICAgICAgICAgICAgICAgICB7dmFsdWU6dmFsQkVKNDgsIG5hbWU6J0JFSjQ4JywgaXRlbVN0eWxlOntjb2xvcjonI2ZmNDA4Myd9fSxcclxuICAgICAgICAgICAgICAgICAgICB7dmFsdWU6dmFsR05aNDgsIG5hbWU6J0dOWjQ4JywgaXRlbVN0eWxlOntjb2xvcjonIzlGQkY0MCd9fSxcclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgLy9uYW1lOiforr/pl67mnaXmupAnLFxyXG4gICAgICAgICAgICAgICAgdHlwZToncGllJyxcclxuICAgICAgICAgICAgICAgIHJhZGl1czogWyc1NCUnLCAnNzUlJ10sXHJcbiAgICAgICAgICAgICAgICBsYWJlbDoge1xyXG4gICAgICAgICAgICAgICAgICAgIG5vcm1hbDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IDQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJpY2g6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGE6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyM5OTknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6IDIyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduOiAnY2VudGVyJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjYWFhJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAwLjUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAxNixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiAzM1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI2VlZScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzMzNDQ1NScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogWzIsIDRdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogMlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGRhdGE6W1xyXG4gICAgICAgICAgICAgICAgICAgIHt2YWx1ZTp2YWxTSUksIG5hbWU6J1NJSScsIGl0ZW1TdHlsZTp7Y29sb3I6JyMwMGI2ZGUnfX0sXHJcbiAgICAgICAgICAgICAgICAgICAge3ZhbHVlOnZhbE5JSSwgbmFtZTonTklJJywgaXRlbVN0eWxlOntjb2xvcjonIzllNTdiNCd9fSxcclxuICAgICAgICAgICAgICAgICAgICB7dmFsdWU6dmFsSElJLCBuYW1lOidISUknLCBpdGVtU3R5bGU6e2NvbG9yOicjZjg5NDFkJ319LFxyXG4gICAgICAgICAgICAgICAgICAgIHt2YWx1ZTp2YWxYLCBuYW1lOidYJywgaXRlbVN0eWxlOntjb2xvcjonI2IxZDYxYid9fSxcclxuICAgICAgICAgICAgICAgICAgICB7dmFsdWU6dmFsQiwgbmFtZTonQicsIGl0ZW1TdHlsZTp7Y29sb3I6JyNmZjQwODMnfX0sXHJcbiAgICAgICAgICAgICAgICAgICAge3ZhbHVlOnZhbEUsIG5hbWU6J0UnLCBpdGVtU3R5bGU6e2NvbG9yOicjMGNjOGMzJ319LFxyXG4gICAgICAgICAgICAgICAgICAgIHt2YWx1ZTp2YWxKLCBuYW1lOidKJywgaXRlbVN0eWxlOntjb2xvcjonIzAwNmFiNyd9fSxcclxuICAgICAgICAgICAgICAgICAgICB7dmFsdWU6dmFsRywgbmFtZTonRycsIGl0ZW1TdHlsZTp7Y29sb3I6JyM5RkJGNDAnfX0sXHJcbiAgICAgICAgICAgICAgICAgICAge3ZhbHVlOnZhbE5JSUksIG5hbWU6J05JSUknLCBpdGVtU3R5bGU6e2NvbG9yOicjZmZlMjQ5J319LFxyXG4gICAgICAgICAgICAgICAgICAgIHt2YWx1ZTp2YWxaLCBuYW1lOidaJywgaXRlbVN0eWxlOntjb2xvcjonI2VhNjE3Yid9fSxcclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH07XHJcblxyXG4gICAgcGVyY2VudGFnZUNoYXJ0LmhpZGVMb2FkaW5nKCk7XHJcbiAgICBwZXJjZW50YWdlQ2hhcnQuc2V0T3B0aW9uKG9wdGlvbiwgdHJ1ZSk7XHJcbn1cclxuXHJcblxyXG4vKiBIb3QgUEsgKi9cclxuLy8gZnVuY3Rpb24gaG90UEsocGtNZW1iZXIsIHBrQW1vdW50LCBwa0Ftb3VudFJhdGlvLCBwa1RpdGxlKSB7XHJcbi8vICAgICB2YXIgb3B0aW9uID0ge1xyXG4vLyAgICAgICAgIHRpdGxlOiB7XHJcbi8vICAgICAgICAgICAgIHRleHQ6IFwi54Ot6ZeoUEtcIixcclxuLy8gICAgICAgICAgICAgdGV4dFN0eWxlOiB7XHJcbi8vICAgICAgICAgICAgICAgICBjb2xvcjogJyNDMERBRkYnLFxyXG4vLyAgICAgICAgICAgICAgICAgZm9udFNpemU6IDIwLFxyXG4vLyAgICAgICAgICAgICB9LFxyXG4vLyAgICAgICAgICAgICBzdWJ0ZXh0OiBwa1RpdGxlLFxyXG4vLyAgICAgICAgICAgICBzdWJ0ZXh0U3R5bGU6IHtcclxuLy8gICAgICAgICAgICAgICAgIGZvbnRTaXplOiAyMCxcclxuLy8gICAgICAgICAgICAgICAgIGNvbG9yOiAnI0MwREFGRicsXHJcbi8vICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICAgICAgLy8geDogXCJjZW50ZXJcIiAgLy8gdGl0bGUgYWxpZ25cclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgICAgIHRvb2x0aXA6IHtcclxuLy8gICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAocGFyYW1zKSB7XHJcbi8vICAgICAgICAgICAgICAgICByZXR1cm4gcGFyYW1zW1wibmFtZVwiXSArIFwiKFwiICsgcGFyYW1zW1wic2VyaWVzTmFtZVwiXSArIFwiKVwiICsgXCI6IFwiICsgcGFyc2VGbG9hdChwYXJhbXNbXCJ2YWx1ZVwiXSkudG9GaXhlZCgyKVxyXG4vLyAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgfSxcclxuLy8gICAgICAgICB4QXhpczoge1xyXG4vLyAgICAgICAgICAgICBkYXRhOiBwa01lbWJlcixcclxuLy8gICAgICAgICAgICAgYXhpc0xpbmU6IHtcclxuLy8gICAgICAgICAgICAgICAgIGxpbmVTdHlsZToge1xyXG4vLyAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI0MwREFGRidcclxuLy8gICAgICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICAgICAgfSxcclxuLy8gICAgICAgICAgICAgLy8gYXhpc0xhYmVsOiB7XHJcbi8vICAgICAgICAgICAgIC8vICAgICB0ZXh0U3R5bGU6IHtcclxuLy8gICAgICAgICAgICAgLy8gICAgICAgICBmb250U2l6ZTogMjBcclxuLy8gICAgICAgICAgICAgLy8gICAgIH1cclxuLy8gICAgICAgICAgICAgLy8gfSxcclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgICAgIHlBeGlzOiB7XHJcbi8vICAgICAgICAgICAgIGF4aXNMaW5lOiB7XHJcbi8vICAgICAgICAgICAgICAgICBsaW5lU3R5bGU6IHtcclxuLy8gICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNDMERBRkYnXHJcbi8vICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgIH0sXHJcbi8vICAgICAgICAgICAgIHNwbGl0TGluZTp7XHJcbi8vICAgICAgICAgICAgICAgICBzaG93OiBmYWxzZVxyXG4vLyAgICAgICAgICAgICB9LFxyXG4vLyAgICAgICAgICAgICAvLyBheGlzTGFiZWw6IHtcclxuLy8gICAgICAgICAgICAgLy8gICAgIHRleHRTdHlsZToge1xyXG4vLyAgICAgICAgICAgICAvLyAgICAgICAgIGZvbnRTaXplOiAyMFxyXG4vLyAgICAgICAgICAgICAvLyAgICAgfVxyXG4vLyAgICAgICAgICAgICAvLyB9LFxyXG4vLyAgICAgICAgIH0sXHJcbi8vICAgICAgICAgZ3JpZDoge1xyXG4vLyAgICAgICAgICAgICAvLyB4LCB5LCB4MiwgeTI6IGF4aXMgZGlzdGFuY2UgZnJvbSBkaXZcclxuLy8gICAgICAgICAgICAgeDogNjAsXHJcbi8vICAgICAgICAgICAgIHk6IDcwLFxyXG4vLyAgICAgICAgICAgICB4MjogMTAsXHJcbi8vICAgICAgICAgICAgIHkyOiAzMCxcclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgICAgIHNlcmllczogW1xyXG4vLyAgICAgICAgICAgICB7XHJcbi8vICAgICAgICAgICAgICAgICBuYW1lOiAn5a6e6ZmF6ZuG6LWEJyxcclxuLy8gICAgICAgICAgICAgICAgIHR5cGU6ICdiYXInLFxyXG4vLyAgICAgICAgICAgICAgICAgZGF0YTogcGtBbW91bnQsXHJcbi8vICAgICAgICAgICAgICAgICBzdGFjazogXCLmgLvph49cIixcclxuLy8gICAgICAgICAgICAgICAgIGxhYmVsOiB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgbm9ybWFsOiB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlLFxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2luc2lkZVRvcCdcclxuLy8gICAgICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgICAgICB9LFxyXG4vLyAgICAgICAgICAgICAgICAgaXRlbVN0eWxlOiB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgbm9ybWFsOiB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBmdW5jdGlvbiAocGFyYW1zKSB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY29sb3JMaXN0ID0gWycjQzMzNTMxJywgJyNFRkU0MkEnLCAnIzY0QkQzRCcsICcjRUU5MjAxJywgJyMyOUFBRTMnLCAnI0I3NEFFNScsICcjMEFBRjlGJywgJyNFODk1ODknLCAnIzE2QTA4NScsICcjNEEyMzVBJywgJyNDMzlCRDMgJywgJyNGOUU3OUYnLCAnI0JBNEEwMCcsICcjRUNGMEYxJywgJyM2MTZBNkInLCAnI0VBRjJGOCcsICcjNEEyMzVBJywgJyMzNDk4REInXTtcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb2xvckxpc3RbcGFyYW1zLmRhdGFJbmRleF1cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4vLyAgICAgICAgICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICAgICAgfSxcclxuLy8gICAgICAgICAgICAge1xyXG4vLyAgICAgICAgICAgICAgICAgbmFtZTogJ+ezu+aVsOmbhui1hCcsXHJcbi8vICAgICAgICAgICAgICAgICB0eXBlOiAnYmFyJyxcclxuLy8gICAgICAgICAgICAgICAgIGRhdGE6IHBrQW1vdW50UmF0aW8sXHJcbi8vICAgICAgICAgICAgICAgICBzdGFjazogXCLmgLvph49cIixcclxuLy8gICAgICAgICAgICAgICAgIGxhYmVsOiB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgbm9ybWFsOiB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlLFxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2luc2lkZVRvcCdcclxuLy8gICAgICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgICAgICB9LFxyXG4vLyAgICAgICAgICAgICAgICAgaXRlbVN0eWxlOiB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgbm9ybWFsOiB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzg4OCdcclxuLy8gICAgICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICBdXHJcbi8vICAgICB9O1xyXG4vL1xyXG4vLyAgICAgcGtDaGFydC5oaWRlTG9hZGluZygpO1xyXG4vLyAgICAgcGtDaGFydC5zZXRPcHRpb24ob3B0aW9uLCB0cnVlKTtcclxuLy8gfVxyXG5cclxuXHJcbi8qIEFqYXggdXBncmFkZSAqL1xyXG52YXIgYWpheFRpbWUgPSAyMDAwOyAgICAvLyBhamF4IGN5Y2xlIGluIG1pbGxpc2Vjb25kXHJcbnNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiAnJyxcclxuICAgICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgIGRhdGFUeXBlOiAnanNvbicsXHJcbiAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBpID0gMDtcclxuICAgICAgICAgICAgZm9yICh2YXIgdmFsIGluIGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIHZhciByYW5rSW5mbyA9IGRhdGFbdmFsXTtcclxuICAgICAgICAgICAgICAgIC8vIFRyYW5zbGF0ZSByYW5rSW5mbyBpbnRvIGpzb24gZm9ybWF0LlxyXG4gICAgICAgICAgICAgICAgdmFyIHJhbmtJbmZvSnNvbiA9ICQucGFyc2VKU09OKHJhbmtJbmZvKTtcclxuICAgICAgICAgICAgICAgIGkrKzsgICAgLy8gcmFua1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgdmFsIGluIHJhbmtJbmZvSnNvbikge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIENvbnN0cnVjdCBtZW1iZXIgZmllbGQgc2VsZWN0b3IuXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1lbWJlclNlbGVjdG9yID0gXCIjdHItcmFuay1cIiArIGkudG9TdHJpbmcoKSArIFwiIC5yYW5rLW1lbWJlclwiO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIENvbnN0cnVjdCByZWFsX2Ftb3VudCBmaWVsZCBzZWxlY3Rvci5cclxuICAgICAgICAgICAgICAgICAgICB2YXIgdG90YWxBbW91bnRTZWxlY3RvciA9IFwiI3RyLXJhbmstXCIgKyBpLnRvU3RyaW5nKCkgKyBcIiAucmFuay1hY2NvdW50XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gQ29uc3RydWN0IHZvdGUgZmllbGQgc2VsZWN0b3IuXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZvdGVTZWxlY3RvciA9IFwiI3RyLXJhbmstXCIgKyBpLnRvU3RyaW5nKCkgKyBcIiAucmFuay12b3RlXCI7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC8vIFNldCB2YWx1ZSBmb3IgbWVtYmVyIHRhZy5cclxuICAgICAgICAgICAgICAgICAgICAkKG1lbWJlclNlbGVjdG9yKS50ZXh0KHJhbmtJbmZvSnNvbltcIm1lbWJlclwiXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHZhbHVlIGZvciByZWFsX2Ftb3VudCAodG90YWwpIHRhZy5cclxuICAgICAgICAgICAgICAgICAgICAkKHRvdGFsQW1vdW50U2VsZWN0b3IpLnRleHQocmFua0luZm9Kc29uW1wicmVhbF9hbW91bnRcIl0pO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFNldCB2YWx1ZSBmb3Igdm90ZSAoMzIgeXVhbiBwZXIgdm90ZSkgdGFnLlxyXG4gICAgICAgICAgICAgICAgICAgICQodm90ZVNlbGVjdG9yKS50ZXh0KHJhbmtJbmZvSnNvbltcInZvdGVcIl0pO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFNldCB2YWx1ZSBmb3IgYW1vdW50IHRvdGFsIHRhZ1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYW1vdW50LXRvdGFsXCIpLnRleHQocmFua0luZm9Kc29uW1wiYW1vdW50X3RvdGFsXCJdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBHcm93dGhcclxuICAgICAgICAgICAgc2FtcGxlVGltZSA9ICQucGFyc2VKU09OKGRhdGFbXCJncm93dGhfdG90YWxcIl0pW1wic2FtcGxlX3RpbWVcIl07XHJcbiAgICAgICAgICAgIGdyb3d0aFRvdGFsID0gJC5wYXJzZUpTT04oZGF0YVtcImdyb3d0aF90b3RhbFwiXSlbXCJhbW91bnRfdG90YWxcIl07XHJcbiAgICAgICAgICAgIGdyb3d0aFRoZWF0ZXIgPSAkLnBhcnNlSlNPTihkYXRhW1wiZ3Jvd3RoX3RoZWF0ZXJcIl0pO1xyXG4gICAgICAgICAgICBncm93dGhUZWFtID0gJC5wYXJzZUpTT04oZGF0YVtcImdyb3d0aF90ZWFtXCJdKTtcclxuXHJcbiAgICAgICAgICAgIC8qIFBlcmNlbnRhZ2UgKi9cclxuICAgICAgICAgICAgdmFsU05INDggPSBncm93dGhUaGVhdGVyWzBdW1wiYW1vdW50X3RoZWF0ZXJcIl07XHJcbiAgICAgICAgICAgIHZhbEJFSjQ4ID0gZ3Jvd3RoVGhlYXRlclsxXVtcImFtb3VudF90aGVhdGVyXCJdO1xyXG4gICAgICAgICAgICB2YWxHTlo0OCA9IGdyb3d0aFRoZWF0ZXJbMl1bXCJhbW91bnRfdGhlYXRlclwiXTtcclxuXHJcbiAgICAgICAgICAgIHZhbFNJSSAgPSBncm93dGhUZWFtWzBdW1wiYW1vdW50X3RlYW1cIl07XHJcbiAgICAgICAgICAgIHZhbE5JSSAgPSBncm93dGhUZWFtWzFdW1wiYW1vdW50X3RlYW1cIl07XHJcbiAgICAgICAgICAgIHZhbEhJSSAgPSBncm93dGhUZWFtWzJdW1wiYW1vdW50X3RlYW1cIl07XHJcbiAgICAgICAgICAgIHZhbFggICAgPSBncm93dGhUZWFtWzNdW1wiYW1vdW50X3RlYW1cIl07XHJcbiAgICAgICAgICAgIHZhbEIgICAgPSBncm93dGhUZWFtWzRdW1wiYW1vdW50X3RlYW1cIl07XHJcbiAgICAgICAgICAgIHZhbEUgICAgPSBncm93dGhUZWFtWzVdW1wiYW1vdW50X3RlYW1cIl07XHJcbiAgICAgICAgICAgIHZhbEogICAgPSBncm93dGhUZWFtWzZdW1wiYW1vdW50X3RlYW1cIl07XHJcbiAgICAgICAgICAgIHZhbEcgICAgPSBncm93dGhUZWFtWzddW1wiYW1vdW50X3RlYW1cIl07XHJcbiAgICAgICAgICAgIHZhbE5JSUkgPSBncm93dGhUZWFtWzhdW1wiYW1vdW50X3RlYW1cIl07XHJcbiAgICAgICAgICAgIHZhbFogICAgPSBncm93dGhUZWFtWzldW1wiYW1vdW50X3RlYW1cIl07XHJcblxyXG4gICAgICAgICAgICAvKiBQSyAqL1xyXG4gICAgICAgICAgICAvLyBwa01lbWJlciA9ICQucGFyc2VKU09OKGRhdGFbXCJwazFcIl0pW1wicGtfbWVtYmVyXCJdO1xyXG4gICAgICAgICAgICAvLyBwa0Ftb3VudCA9ICQucGFyc2VKU09OKGRhdGFbXCJwazFcIl0pW1wicGtfYW1vdW50XCJdO1xyXG4gICAgICAgICAgICAvLyBwa0Ftb3VudFJhdGlvID0gJC5wYXJzZUpTT04oZGF0YVtcInBrMVwiXSlbXCJwa19hbW91bnRfcmF0aW9cIl07XHJcbiAgICAgICAgICAgIC8vIHBrVGl0bGUgPSAkLnBhcnNlSlNPTihkYXRhW1wicGsxXCJdKVtcInBrX3RpdGxlXCJdO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIGdyb3d0aFxyXG4gICAgYWRkRGF0YSh0cnVlLCBzYW1wbGVUaW1lLCBncm93dGhUb3RhbCwgZ3Jvd3RoVGhlYXRlcik7XHJcbiAgICBncm93dGhDaGFydC5zZXRPcHRpb24oe1xyXG4gICAgICAgIHhBeGlzOiB7XHJcbiAgICAgICAgICAgIGRhdGE6IGRhdGVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNlcmllczogW1xyXG4gICAgICAgICAgICB7bmFtZTon6ZuG6LWE5oC76aKdJywgZGF0YTogZ3Jvd3RoRGF0YVRvdGFsfSxcclxuICAgICAgICAgICAge25hbWU6J1NOSDQ4JywgZGF0YTogZ3Jvd3RoRGF0YVNOSDQ4fSxcclxuICAgICAgICAgICAge25hbWU6J0JFSjQ4JywgZGF0YTogZ3Jvd3RoRGF0YUJFSjQ4fSxcclxuICAgICAgICAgICAge25hbWU6J0dOWjQ4JywgZGF0YTogZ3Jvd3RoRGF0YUdOWjQ4fSxcclxuICAgICAgICBdXHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBwZXJjZW50YWdlXHJcbiAgICBhbW91bnRQZXJjZW50YWdlKFxyXG4gICAgICAgIHZhbFNOSDQ4LCB2YWxCRUo0OCwgdmFsR05aNDgsXHJcbiAgICAgICAgdmFsU0lJLCB2YWxOSUksIHZhbEhJSSwgdmFsWCwgdmFsQiwgdmFsRSwgdmFsSiwgdmFsRywgdmFsTklJSSwgdmFsWik7XHJcblxyXG4gICAgLy8gcGtcclxuICAgIC8vIGhvdFBLKHBrTWVtYmVyLCBwa0Ftb3VudCwgcGtBbW91bnRSYXRpbywgcGtUaXRsZSk7XHJcblxyXG59LCBhamF4VGltZSk7ICAgLy8gYWpheCBldmVyeSBhamF4VGltZSBtaWxsaXNlY29uZFxyXG5cclxuIl19
