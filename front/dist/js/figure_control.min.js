var dom=document.getElementById("inner-group"),myChart=echarts.init(dom),app={};option=null;var growthTheater,growthTeam,valSNH48,valBEJ48,valGNZ48,valSII,valNII,valHII,valX,valB,valE,valJ,valG,valNIII,valZ,base=+new Date(2014,9,3),oneDay=864e5,date=[],data=[1],my_data=[0],growthDataSNH48=[0],growthDataBEJ48=[0],growthDataGNZ48=[0],now=new Date(base),growthData=0;function addData(a,t){now=[now.getMonth()+1,now.getDate()].join("/"),date.push(now),my_data.push(t*Math.random()),growthDataSNH48.push(t*Math.random()),growthDataBEJ48.push(t*Math.random()),growthDataGNZ48.push(t*Math.random()),data.push(1+data[data.length-1]),a&&(date.shift(),data.shift(),my_data.shift(),growthDataSNH48.shift(),growthDataBEJ48.shift(),growthDataGNZ48.shift()),now=new Date(+new Date(now)+oneDay)}for(var i=1;i<10;i++)addData();function amountPercentage(a,t,e,o,r,l,n,m,i,h,d,y,s){var g=echarts.init(document.getElementById("inner-percentage"));option={title:{text:"集资比例",textStyle:{color:"#C0DAFF"}},tooltip:{trigger:"item",formatter:"{b}: {c} ({d}%)"},series:[{type:"pie",selectedMode:"single",radius:[0,"45%"],label:{normal:{position:"inner"}},labelLine:{normal:{show:!1}},data:[{value:a,name:"SNH48",itemStyle:{color:"#00b6de"}},{value:t,name:"BEJ48",itemStyle:{color:"#ff4083"}},{value:e,name:"GNZ48",itemStyle:{color:"#9FBF40"}}]},{type:"pie",radius:["54%","75%"],label:{normal:{borderRadius:4,rich:{a:{color:"#999",lineHeight:22,align:"center"},hr:{borderColor:"#aaa",width:"100%",borderWidth:.5,height:0},b:{fontSize:16,lineHeight:33},per:{color:"#eee",backgroundColor:"#334455",padding:[2,4],borderRadius:2}}}},data:[{value:o,name:"SII",itemStyle:{color:"#00b6de"}},{value:r,name:"NII",itemStyle:{color:"#9e57b4"}},{value:l,name:"HII",itemStyle:{color:"#f8941d"}},{value:n,name:"X",itemStyle:{color:"#b1d61b"}},{value:m,name:"B",itemStyle:{color:"#ff4083"}},{value:i,name:"E",itemStyle:{color:"#0cc8c3"}},{value:h,name:"J",itemStyle:{color:"#006ab7"}},{value:d,name:"G",itemStyle:{color:"#9FBF40"}},{value:y,name:"NIII",itemStyle:{color:"#ffe249"}},{value:s,name:"Z",itemStyle:{color:"#ea617b"}}]}]},g.setOption(option,!0)}option={tooltip:{trigger:"axis",showContent:!1,axisPointer:{type:"cross"},backgroundColor:"rgba(192, 218, 255, 0.5)",textStyle:{color:"#000"},extraCssText:"width: 170px"},title:{text:"集资增长",textStyle:{color:"#C0DAFF"}},xAxis:{type:"category",boundaryGap:!1,data:date,axisLine:{lineStyle:{color:"#C0DAFF"}}},yAxis:{boundaryGap:[0,"100%"],type:"value",splitLine:{show:!1},axisLine:{lineStyle:{color:"#C0DAFF"}}},grid:{x:60,y:50,x2:18,y2:50},series:[{name:"集资总额",type:"line",smooth:!0,symbol:"none",stack:"a",areaStyle:{normal:{}},data:my_data,itemStyle:{normal:{color:"#00b6de",borderColor:"#00b6de",areaStyle:{type:"default",opacity:.3}}}},{name:"SNH48",type:"line",smooth:!0,symbol:"none",stack:"a",areaStyle:{normal:{}},data:growthDataSNH48,itemStyle:{normal:{color:"#00b6de",borderColor:"#00b6de",areaStyle:{type:"default",opacity:.3}}}},{name:"BEJ48",type:"line",smooth:!0,symbol:"none",stack:"a",areaStyle:{normal:{}},data:growthDataBEJ48,itemStyle:{normal:{color:"#ff4083",borderColor:"#ff4083",areaStyle:{type:"default",opacity:.3}}}},{name:"GNZ48",type:"line",smooth:!0,symbol:"none",stack:"a",areaStyle:{normal:{}},data:growthDataBEJ48,itemStyle:{normal:{color:"#9FBF40",borderColor:"#9FBF40",areaStyle:{type:"default",opacity:.3}}}}]},option&&"object"==typeof option&&myChart.setOption(option,!0);var ajaxTime=5e3;setInterval(function(){$.ajax({url:"",contentType:"application/json",dataType:"json",type:"GET",success:function(a,t){for(var e in i=0,a){var o=a[e],r=$.parseJSON(o);for(var e in i++,r){var l="#tr-rank-"+i.toString()+" .rank-member",n="#tr-rank-"+i.toString()+" .rank-account";$(l).text(r.member),$(n).text(r.real_amount),$("#amount-total").text(r.amount_total)}}growthData=$.parseJSON(a.growth_total).amount_total,growthTheater=$.parseJSON(a.growth_theater),growthTeam=$.parseJSON(a.growth_team),valSNH48=growthTheater[0].amount_theater,valBEJ48=growthTheater[1].amount_theater,valGNZ48=growthTheater[2].amount_theater,valSII=growthTeam[0].amount_team,valNII=growthTeam[1].amount_team,valHII=growthTeam[2].amount_team,valX=growthTeam[3].amount_team,valB=growthTeam[4].amount_team,valE=growthTeam[5].amount_team,valJ=growthTeam[6].amount_team,valG=growthTeam[7].amount_team,valNIII=growthTeam[8].amount_team,valZ=growthTeam[9].amount_team}}),addData(!0,growthData),myChart.setOption({xAxis:{data:date},series:[{name:"集资总额",data:my_data},{name:"SNH48",data:growthDataSNH48},{name:"BEJ48",data:growthDataBEJ48},{name:"GNZ48",data:growthDataGNZ48}]}),amountPercentage(valSNH48,valBEJ48,valGNZ48,valSII,valNII,valHII,valX,valB,valE,valJ,valG,valNIII,valZ)},ajaxTime);var hotPK=function(){echarts.init(document.getElementById("inner-pk")).setOption({title:{text:"热门PK",textStyle:{color:"#C0DAFF"}},tooltip:{},legend:{data:["集资总额"]},xAxis:{data:["李艺彤","黄婷婷","冯薪朵","陆婷","莫寒","赵粤"]},yAxis:{},series:[{name:"集资总额",type:"bar",data:[1500,1e3,400,350,250,300]}]})};$(hotPK);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
