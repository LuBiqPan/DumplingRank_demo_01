function getCookie(t){var e=null;if(document.cookie&&""!==document.cookie)for(var n=document.cookie.split(";"),o=0;o<n.length;o++){var i=jQuery.trim(n[o]);if(i.substring(0,t.length+1)===t+"="){e=decodeURIComponent(i.substring(t.length+1));break}}return e}var myajax={get:function(t){t.method="get",this.ajax(t)},post:function(t){t.method="post",this._ajaxSetup(),this.ajax(t)},ajax:function(t){$.ajax(t)},_ajaxSetup:function(){$.ajaxSetup({beforeSend:function(t,e){/^(GET|HEAD|OPTIONS|TRACE)$/.test(e.type)||this.crossDomain||t.setRequestHeader("X-CSRFToken",getCookie("csrftoken"))}})}};function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,e=$(".signin-btn"),n=$(".signup-btn"),o=$(".close-btn");e.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),n.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),o.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var e=this;$(".switch").click(function(){var t=e.scrollWrapper.css("left");(t=parseInt(t))<0?e.scrollWrapper.animate({left:"0"}):e.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var i=this,t=$(".signin-group"),s=t.find("input[name='telephone']"),r=t.find("input[name='password']"),a=t.find("input[name='remember']");t.find(".submit-btn").click(function(t){t.preventDefault();var e=s.val(),n=r.val(),o=a.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:e,password:n,remember:o?1:0,csrfmiddlewaretoken:$("#csrf_token").val()},success:function(t){if(console.log(t),200===t.code)i.hideEvent(),window.location.reload();else{console.log("Login failed.");var e=t.message;if("string"==typeof e||e.constructor==String)console.log(e),window.messageBox.show(e);else for(var n in e){var o=e[n][0];console.log(o),window.messageBox.show(o)}}},fail:function(t){console.log(t)}})})},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
