function Growth(){this.dom=document.getElementById("inner-group"),this.growthChart=echarts.init(this.dom),this.ajaxTime=1e3,this.growthData={}}Growth.prototype.init=function(){var t=this,e={tooltip:{trigger:"axis",showContent:!0,axisPointer:{type:"cross",lineStyle:{type:"dashed"}},backgroundColor:"rgba(192, 218, 255, 0.5)",textStyle:{color:"#000"},extraCssText:"width: 170px",formatter:function(t){for(var e=t[0].seriesName+": "+t[0].value.toFixed(2)+"<br>",o=1;o<t.length;o++)"string"==typeof t[o].value?e+=t[o].seriesName+": "+parseFloat(t[o].value).toFixed(2)+"<br>":e+=t[o].seriesName+": "+t[o].value.toFixed(2)+"<br>";return e}},title:{text:"集资增长",textStyle:{color:"#C0DAFF"},y:3},legend:{type:"plain",x:"left",left:50,top:40,inactiveColor:"#121A20",textStyle:{color:"#aaaaaa",fontSize:10}},xAxis:{type:"category",boundaryGap:!1,data:t.growthData.sample_time,axisLine:{lineStyle:{color:"#C0DAFF"}}},yAxis:{name:"单位：万元",nameGap:10,type:"value",boundaryGap:!1,splitLine:{show:!1},axisLine:{lineStyle:{color:"#C0DAFF"}},axisLabel:{textStyle:{fontSize:15},formatter:function(t,e){return t/1e4}}},grid:{x:40,y:50,x2:10,y2:30},series:[{name:"全团总额",type:"line",smooth:!1,symbol:"circle",areaStyle:{normal:{}},data:t.growthData.growth_theater["全团总额"],lineStyle:{width:3},itemStyle:{normal:{color:"#00b6de",borderColor:"#00b6de",areaStyle:{type:"default",opacity:0}}}},{name:"SNH48",type:"line",smooth:!1,symbol:"circle",areaStyle:{normal:{}},data:t.growthData.growth_theater.SNH48,itemStyle:{normal:{color:"#00b6de",borderColor:"#00b6de",areaStyle:{type:"default",opacity:.3}}}},{name:"BEJ48",type:"line",smooth:!1,symbol:"circle",areaStyle:{normal:{}},data:t.growthData.growth_theater.BEJ48,itemStyle:{normal:{color:"#ff4083",borderColor:"#ff4083",areaStyle:{type:"default",opacity:.3}}}},{name:"GNZ48",type:"line",smooth:!1,symbol:"circle",areaStyle:{normal:{}},data:t.growthData.growth_theater.GNZ48,itemStyle:{normal:{color:"#9FBF40",borderColor:"#9FBF40",areaStyle:{type:"default",opacity:.3}}}}]};"object"==typeof e&&t.growthChart.setOption(e,!0)},Growth.prototype.ajax=function(){var e=this;$.ajax({url:"/growth/",contentType:"application/json",dataType:"json",type:"GET",success:function(t){e.growthData=$.parseJSON(t.growth)}})},Growth.prototype.run=function(){var t=this;t.ajax(),t.growthChart.showLoading({text:"正在加载，请稍后...",color:"#C0DAFF",textColor:"#C0DAFF",maskColor:"rgba(255, 255, 255, 0.0)",zlevel:0}),setInterval(function(){t.growthChart.hideLoading(),t.init()},t.ajaxTime)},$(function(){(new Growth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
